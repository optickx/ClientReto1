@startuml client
/'Graphic properties
'/

skinparam linetype ortho
skinparam groupInheritance 5
hide empty members

/'Main class
'/
class Application {
    -LoginWindow lw
    +void main()
}

/'Every window of the program.
Three of them.'/
class LoginController {
    -String userName
    __
    +void login()
    __
    The first window the user 
    sees when opening the program.
}
class RegisterController {
    -String credentials
    __
    +void register()
    __
    Window to enter the data for 
    a new user.

}
class GreetController {
    -String greet
    __
    GreetWindow (String greet)
}
/'Logic part of the program.
'/
interface IUserManager {
    +Message login()
    +Message signIn()
}
class IUMImplementation {
    +void login()
    +void signIn()
    -List getUusers()
    __
    DAO. Returns the User objects.
}
class UserManagerFactory {
    +IUserManager getUsers()
}

/'Pre-existing Java classes '/
class Socket {
    InputStream read()
    OutputStream write()
    __
    All this stuff already exists.
}
/'Objects, etc
'/
class User {
    -Integer ID
    -String login
    -String email
    -String fullName
    -String password
    -TimeStamp lastPasswordChange
    -UserStatus status
    -UserPrivilege privilege
    -Collection lastLogins
    __
    +void whatever()
    __
    Object that moves the data.
}
class SignIn {
    -TimeStamp lastSignIn
}
/'Encapsulator class
'/
class Message {
    -User user
    -String message
    __
    +User getUser()
    +String getString()
    __
    Class that stores the user and instruction.
}
/'types of response'/
enum Action {
    INSERT
    RETURN
}

/'Exceptions.
class UserNotFoundException {
}
class UsernameNotAvailableException {
}
class EmailNotAvailableException {
}
class InvalidEmailFormatException {
}
class UnmatchedPasswordsException {
}
'/

Application -- LoginController

LoginController -right- GreetController
LoginController -left- RegisterController

LoginController -down-> UserManagerFactory
RegisterController --> UserManagerFactory

LoginController --> IUserManager
RegisterController --> IUserManager

/' It looks horrible but ya have to indicate it:
User appears in every class from view.
'/

/'
LoginController --> User
RegisterController --> User
GreetController -down-> User
'/

UserManagerFactory -- IUserManager
IUserManager <|.. IUMImplementation
IUMImplementation -right-> User

IUMImplementation -left-> Socket
IUMImplementation --> Message

User -up-> SignIn
User <-right- Message
Action -left- Message


CustomException <|-- UserNotFoundException
CustomException <|-- UsernameNotAvailableException
CustomException <|-- EmailNotAvailableException
CustomException <|-- InvalidEmailFormatException
CustomException <|-- UnmatchedPasswordsException


/'
IUMImplementation -down- UserNotFoundException
IUMImplementation -down- UsernameNotAvailableException
IUMImplementation -down- EmailNotAvailableException
InvalidEmailFormatException -right- RegisterController
UnmatchedPasswordsException -- RegisterController
'/
@enduml