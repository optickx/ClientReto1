@startuml client
/'Graphic properties
'/

/'!theme carbon-gray'/
skinparam linetype ortho

/'Main class
'/
class Application {
    LoginWindow lw
    void main(String [] args)
}

/'Every window of the program.
Three of them.'/
class LoginWindow {
    TextView textToUser
    Text inputUsername
    Text inputPassword
    Button register
    Button login
    __
    The first window the user 
    sees when opening the program.

}
class RegisterWindow {
    Text input
    Button register
    __
    Window to enter the data for 
    a new user.

}
class GreetWindow {
    TextView greet
}

/'Window controllers. 
All the actions performed by the 
windows will be represented in here.'/
class LoginWindowController {

}
class RegisterWindowController {

}
class GreetWindowController {

}

/'Logic part of the program.
'/
interface IUserManager {
    User login()
    Integer signIn()
}
class IUMImplementation {
    __
    DAO. Returns the User objects.
}
class UserManagerFactory {
    IUserManager getUsers()
}

/'Pre-existing Java classes
'/
class Socket {
    InputStream read()
    OutputStream write()
}

/'Objects, etc
'/
class User {
    Integer ID
    String login
    String email
    String fullName
    String password
    TimeStamp lastPasswordChange
    UserStatus status
    UserPrivilege privilege
    __
    void constructor()
    __
    Object that moves the data.
}
/'Encapsulator class
'/
class Capsule {
    User user
    String message
    __
    Class that stores the user and instruction.
}

/'Exceptions.'/

Application -- LoginWindow

/'Windows'/

LoginWindow <-- LoginWindowController
LoginWindow -right- GreetWindow
RegisterWindow <-left- RegisterWindowController
GreetWindow <-right- GreetWindowController

LoginWindowController <-left- UserManagerFactory
RegisterWindowController <-- UserManagerFactory

UserManagerFactory -- IUserManager
IUserManager <|-- IUMImplementation
IUMImplementation <-- User

IUMImplementation <-- Socket

Capsule -- User
@enduml